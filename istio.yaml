---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istiokeycloak-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: istiokeycloak
spec:
  hosts:
    - "*"
  gateways:
    - istiokeycloak-gateway
  http:
  - match:
    - uri:
        prefix: /greetings
    - uri:
        prefix: /
    route:
    - destination:
        host: istiokeycloak
        port:
          number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: istiokeycloak
spec:
  host: istiokeycloak
  subsets:
    - name: v1
      labels:
        version: v1
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: istiokeycloak-req-auth
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  jwtRules:
    - issuer: http://keycloak:31198/auth/realms/istio/
      jwksUri: http://keycloak:31198/auth/realms/istio/protocol/openid-connect/certs
      forwardOriginalToken: true
---
#apiVersion: security.istio.io/v1beta1
#kind: AuthorizationPolicy
#metadata:
#  name: ingress-auth-deny
#  namespace: istio-system
#spec:
#  selector:
#    matchLabels:
#      istio: ingressgateway
#  action: DENY
#  rules:
#    - from:
#        - source:
#            notRequestPrincipals: ["*"]
---
#apiVersion: security.istio.io/v1beta1
#kind: AuthorizationPolicy
#metadata:
#  name: ingress-auth-allow
#  namespace: istio-system
#spec:
#  selector:
#    matchLabels:
#      istio: ingressgateway
#  action: ALLOW
#  rules:
#    - from:
#        - source:
#            requestPrincipals: [http://keycloak:31198/auth/realms/istio/]
---